// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"github.com/cadmiumcat/books-api/interfaces"
	"net/http"
	"sync"
)

// Ensure, that PaginatorMock does implement interfaces.Paginator.
// If this is not the case, regenerate this file with moq.
var _ interfaces.Paginator = &PaginatorMock{}

// PaginatorMock is a mock implementation of interfaces.Paginator.
//
//     func TestSomethingThatUsesPaginator(t *testing.T) {
//
//         // make and configure a mocked interfaces.Paginator
//         mockedPaginator := &PaginatorMock{
//             SetPaginationValuesFunc: func(r *http.Request) (int, int, error) {
// 	               panic("mock out the SetPaginationValues method")
//             },
//         }
//
//         // use mockedPaginator in code that requires interfaces.Paginator
//         // and then make assertions.
//
//     }
type PaginatorMock struct {
	// SetPaginationValuesFunc mocks the SetPaginationValues method.
	SetPaginationValuesFunc func(r *http.Request) (int, int, error)

	// calls tracks calls to the methods.
	calls struct {
		// SetPaginationValues holds details about calls to the SetPaginationValues method.
		SetPaginationValues []struct {
			// R is the r argument value.
			R *http.Request
		}
	}
	lockSetPaginationValues sync.RWMutex
}

// SetPaginationValues calls SetPaginationValuesFunc.
func (mock *PaginatorMock) SetPaginationValues(r *http.Request) (int, int, error) {
	if mock.SetPaginationValuesFunc == nil {
		panic("PaginatorMock.SetPaginationValuesFunc: method is nil but Paginator.SetPaginationValues was just called")
	}
	callInfo := struct {
		R *http.Request
	}{
		R: r,
	}
	mock.lockSetPaginationValues.Lock()
	mock.calls.SetPaginationValues = append(mock.calls.SetPaginationValues, callInfo)
	mock.lockSetPaginationValues.Unlock()
	return mock.SetPaginationValuesFunc(r)
}

// SetPaginationValuesCalls gets all the calls that were made to SetPaginationValues.
// Check the length with:
//     len(mockedPaginator.SetPaginationValuesCalls())
func (mock *PaginatorMock) SetPaginationValuesCalls() []struct {
	R *http.Request
} {
	var calls []struct {
		R *http.Request
	}
	mock.lockSetPaginationValues.RLock()
	calls = mock.calls.SetPaginationValues
	mock.lockSetPaginationValues.RUnlock()
	return calls
}
