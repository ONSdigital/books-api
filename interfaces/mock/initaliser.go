// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mock

import (
	"github.com/ONSdigital/books-api/interfaces"
	"net/http"
	"sync"
)

// Ensure, that InitialiserMock does implement interfaces.Initialiser.
// If this is not the case, regenerate this file with moq.
var _ interfaces.Initialiser = &InitialiserMock{}

// InitialiserMock is a mock implementation of interfaces.Initialiser.
//
//     func TestSomethingThatUsesInitialiser(t *testing.T) {
//
//         // make and configure a mocked interfaces.Initialiser
//         mockedInitialiser := &InitialiserMock{
//             GetHTTPServerFunc: func(BindAddr string, router http.Handler) interfaces.HTTPServer {
// 	               panic("mock out the GetHTTPServer method")
//             },
//         }
//
//         // use mockedInitialiser in code that requires interfaces.Initialiser
//         // and then make assertions.
//
//     }
type InitialiserMock struct {
	// GetHTTPServerFunc mocks the GetHTTPServer method.
	GetHTTPServerFunc func(BindAddr string, router http.Handler) interfaces.HTTPServer

	// calls tracks calls to the methods.
	calls struct {
		// GetHTTPServer holds details about calls to the GetHTTPServer method.
		GetHTTPServer []struct {
			// BindAddr is the BindAddr argument value.
			BindAddr string
			// Router is the router argument value.
			Router http.Handler
		}
	}
	lockGetHTTPServer sync.RWMutex
}

// GetHTTPServer calls GetHTTPServerFunc.
func (mock *InitialiserMock) GetHTTPServer(BindAddr string, router http.Handler) interfaces.HTTPServer {
	if mock.GetHTTPServerFunc == nil {
		panic("InitialiserMock.GetHTTPServerFunc: method is nil but Initialiser.GetHTTPServer was just called")
	}
	callInfo := struct {
		BindAddr string
		Router   http.Handler
	}{
		BindAddr: BindAddr,
		Router:   router,
	}
	mock.lockGetHTTPServer.Lock()
	mock.calls.GetHTTPServer = append(mock.calls.GetHTTPServer, callInfo)
	mock.lockGetHTTPServer.Unlock()
	return mock.GetHTTPServerFunc(BindAddr, router)
}

// GetHTTPServerCalls gets all the calls that were made to GetHTTPServer.
// Check the length with:
//     len(mockedInitialiser.GetHTTPServerCalls())
func (mock *InitialiserMock) GetHTTPServerCalls() []struct {
	BindAddr string
	Router   http.Handler
} {
	var calls []struct {
		BindAddr string
		Router   http.Handler
	}
	mock.lockGetHTTPServer.RLock()
	calls = mock.calls.GetHTTPServer
	mock.lockGetHTTPServer.RUnlock()
	return calls
}
